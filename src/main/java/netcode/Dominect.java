// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dominect.proto

package dom;

public final class Dominect {
  private Dominect() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GameParameterOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dom.GameParameter)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The width defines left and right edges for the first player.
     * </pre>
     *
     * <code>uint32 board_width = 1;</code>
     * @return The boardWidth.
     */
    int getBoardWidth();

    /**
     * <pre>
     * The height defines top and bottom edges for the second player.
     * </pre>
     *
     * <code>uint32 board_height = 2;</code>
     * @return The boardHeight.
     */
    int getBoardHeight();
  }
  /**
   * <pre>
   * The GameParameter packet defines the board of m x n fields (width x height).
   * </pre>
   *
   * Protobuf type {@code dom.GameParameter}
   */
  public static final class GameParameter extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dom.GameParameter)
      GameParameterOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameParameter.newBuilder() to construct.
    private GameParameter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameParameter() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GameParameter();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameParameter(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              boardWidth_ = input.readUInt32();
              break;
            }
            case 16: {

              boardHeight_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dom.Dominect.internal_static_dom_GameParameter_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dom.Dominect.internal_static_dom_GameParameter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dom.Dominect.GameParameter.class, dom.Dominect.GameParameter.Builder.class);
    }

    public static final int BOARD_WIDTH_FIELD_NUMBER = 1;
    private int boardWidth_;
    /**
     * <pre>
     * The width defines left and right edges for the first player.
     * </pre>
     *
     * <code>uint32 board_width = 1;</code>
     * @return The boardWidth.
     */
    @java.lang.Override
    public int getBoardWidth() {
      return boardWidth_;
    }

    public static final int BOARD_HEIGHT_FIELD_NUMBER = 2;
    private int boardHeight_;
    /**
     * <pre>
     * The height defines top and bottom edges for the second player.
     * </pre>
     *
     * <code>uint32 board_height = 2;</code>
     * @return The boardHeight.
     */
    @java.lang.Override
    public int getBoardHeight() {
      return boardHeight_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (boardWidth_ != 0) {
        output.writeUInt32(1, boardWidth_);
      }
      if (boardHeight_ != 0) {
        output.writeUInt32(2, boardHeight_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (boardWidth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, boardWidth_);
      }
      if (boardHeight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, boardHeight_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dom.Dominect.GameParameter)) {
        return super.equals(obj);
      }
      dom.Dominect.GameParameter other = (dom.Dominect.GameParameter) obj;

      if (getBoardWidth()
          != other.getBoardWidth()) return false;
      if (getBoardHeight()
          != other.getBoardHeight()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BOARD_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getBoardWidth();
      hash = (37 * hash) + BOARD_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getBoardHeight();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dom.Dominect.GameParameter parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dom.Dominect.GameParameter parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dom.Dominect.GameParameter parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dom.Dominect.GameParameter parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dom.Dominect.GameParameter parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dom.Dominect.GameParameter parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dom.Dominect.GameParameter parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dom.Dominect.GameParameter parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dom.Dominect.GameParameter parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dom.Dominect.GameParameter parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dom.Dominect.GameParameter parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dom.Dominect.GameParameter parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dom.Dominect.GameParameter prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The GameParameter packet defines the board of m x n fields (width x height).
     * </pre>
     *
     * Protobuf type {@code dom.GameParameter}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dom.GameParameter)
        dom.Dominect.GameParameterOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dom.Dominect.internal_static_dom_GameParameter_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dom.Dominect.internal_static_dom_GameParameter_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dom.Dominect.GameParameter.class, dom.Dominect.GameParameter.Builder.class);
      }

      // Construct using dom.Dominect.GameParameter.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        boardWidth_ = 0;

        boardHeight_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dom.Dominect.internal_static_dom_GameParameter_descriptor;
      }

      @java.lang.Override
      public dom.Dominect.GameParameter getDefaultInstanceForType() {
        return dom.Dominect.GameParameter.getDefaultInstance();
      }

      @java.lang.Override
      public dom.Dominect.GameParameter build() {
        dom.Dominect.GameParameter result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dom.Dominect.GameParameter buildPartial() {
        dom.Dominect.GameParameter result = new dom.Dominect.GameParameter(this);
        result.boardWidth_ = boardWidth_;
        result.boardHeight_ = boardHeight_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dom.Dominect.GameParameter) {
          return mergeFrom((dom.Dominect.GameParameter)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dom.Dominect.GameParameter other) {
        if (other == dom.Dominect.GameParameter.getDefaultInstance()) return this;
        if (other.getBoardWidth() != 0) {
          setBoardWidth(other.getBoardWidth());
        }
        if (other.getBoardHeight() != 0) {
          setBoardHeight(other.getBoardHeight());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dom.Dominect.GameParameter parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dom.Dominect.GameParameter) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int boardWidth_ ;
      /**
       * <pre>
       * The width defines left and right edges for the first player.
       * </pre>
       *
       * <code>uint32 board_width = 1;</code>
       * @return The boardWidth.
       */
      @java.lang.Override
      public int getBoardWidth() {
        return boardWidth_;
      }
      /**
       * <pre>
       * The width defines left and right edges for the first player.
       * </pre>
       *
       * <code>uint32 board_width = 1;</code>
       * @param value The boardWidth to set.
       * @return This builder for chaining.
       */
      public Builder setBoardWidth(int value) {
        
        boardWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The width defines left and right edges for the first player.
       * </pre>
       *
       * <code>uint32 board_width = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardWidth() {
        
        boardWidth_ = 0;
        onChanged();
        return this;
      }

      private int boardHeight_ ;
      /**
       * <pre>
       * The height defines top and bottom edges for the second player.
       * </pre>
       *
       * <code>uint32 board_height = 2;</code>
       * @return The boardHeight.
       */
      @java.lang.Override
      public int getBoardHeight() {
        return boardHeight_;
      }
      /**
       * <pre>
       * The height defines top and bottom edges for the second player.
       * </pre>
       *
       * <code>uint32 board_height = 2;</code>
       * @param value The boardHeight to set.
       * @return This builder for chaining.
       */
      public Builder setBoardHeight(int value) {
        
        boardHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The height defines top and bottom edges for the second player.
       * </pre>
       *
       * <code>uint32 board_height = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardHeight() {
        
        boardHeight_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dom.GameParameter)
    }

    // @@protoc_insertion_point(class_scope:dom.GameParameter)
    private static final dom.Dominect.GameParameter DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dom.Dominect.GameParameter();
    }

    public static dom.Dominect.GameParameter getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GameParameter>
        PARSER = new com.google.protobuf.AbstractParser<GameParameter>() {
      @java.lang.Override
      public GameParameter parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameParameter(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameParameter> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameParameter> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dom.Dominect.GameParameter getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameTurnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dom.GameTurn)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 1. Position, X-axis coordinate.
     * </pre>
     *
     * <code>uint32 x1 = 1;</code>
     * @return The x1.
     */
    int getX1();

    /**
     * <pre>
     * 1. Position, Y-axis coordinate.
     * </pre>
     *
     * <code>uint32 y1 = 2;</code>
     * @return The y1.
     */
    int getY1();

    /**
     * <pre>
     * 2. Position, X-axis coordinate.
     * </pre>
     *
     * <code>uint32 x2 = 3;</code>
     * @return The x2.
     */
    int getX2();

    /**
     * <pre>
     * 2. Position, Y-axis coordinate.
     * </pre>
     *
     * <code>uint32 y2 = 4;</code>
     * @return The y2.
     */
    int getY2();
  }
  /**
   * <pre>
   * The GameTurn packet defines the two occupied positions of the played domino piece.
   * These positions should be adjacent (a valid domino piece), otherwise the server will respond with an invalid turn status.
   * </pre>
   *
   * Protobuf type {@code dom.GameTurn}
   */
  public static final class GameTurn extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dom.GameTurn)
      GameTurnOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameTurn.newBuilder() to construct.
    private GameTurn(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameTurn() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GameTurn();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameTurn(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              x1_ = input.readUInt32();
              break;
            }
            case 16: {

              y1_ = input.readUInt32();
              break;
            }
            case 24: {

              x2_ = input.readUInt32();
              break;
            }
            case 32: {

              y2_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dom.Dominect.internal_static_dom_GameTurn_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dom.Dominect.internal_static_dom_GameTurn_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dom.Dominect.GameTurn.class, dom.Dominect.GameTurn.Builder.class);
    }

    public static final int X1_FIELD_NUMBER = 1;
    private int x1_;
    /**
     * <pre>
     * 1. Position, X-axis coordinate.
     * </pre>
     *
     * <code>uint32 x1 = 1;</code>
     * @return The x1.
     */
    @java.lang.Override
    public int getX1() {
      return x1_;
    }

    public static final int Y1_FIELD_NUMBER = 2;
    private int y1_;
    /**
     * <pre>
     * 1. Position, Y-axis coordinate.
     * </pre>
     *
     * <code>uint32 y1 = 2;</code>
     * @return The y1.
     */
    @java.lang.Override
    public int getY1() {
      return y1_;
    }

    public static final int X2_FIELD_NUMBER = 3;
    private int x2_;
    /**
     * <pre>
     * 2. Position, X-axis coordinate.
     * </pre>
     *
     * <code>uint32 x2 = 3;</code>
     * @return The x2.
     */
    @java.lang.Override
    public int getX2() {
      return x2_;
    }

    public static final int Y2_FIELD_NUMBER = 4;
    private int y2_;
    /**
     * <pre>
     * 2. Position, Y-axis coordinate.
     * </pre>
     *
     * <code>uint32 y2 = 4;</code>
     * @return The y2.
     */
    @java.lang.Override
    public int getY2() {
      return y2_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (x1_ != 0) {
        output.writeUInt32(1, x1_);
      }
      if (y1_ != 0) {
        output.writeUInt32(2, y1_);
      }
      if (x2_ != 0) {
        output.writeUInt32(3, x2_);
      }
      if (y2_ != 0) {
        output.writeUInt32(4, y2_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (x1_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, x1_);
      }
      if (y1_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, y1_);
      }
      if (x2_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, x2_);
      }
      if (y2_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, y2_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dom.Dominect.GameTurn)) {
        return super.equals(obj);
      }
      dom.Dominect.GameTurn other = (dom.Dominect.GameTurn) obj;

      if (getX1()
          != other.getX1()) return false;
      if (getY1()
          != other.getY1()) return false;
      if (getX2()
          != other.getX2()) return false;
      if (getY2()
          != other.getY2()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X1_FIELD_NUMBER;
      hash = (53 * hash) + getX1();
      hash = (37 * hash) + Y1_FIELD_NUMBER;
      hash = (53 * hash) + getY1();
      hash = (37 * hash) + X2_FIELD_NUMBER;
      hash = (53 * hash) + getX2();
      hash = (37 * hash) + Y2_FIELD_NUMBER;
      hash = (53 * hash) + getY2();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dom.Dominect.GameTurn parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dom.Dominect.GameTurn parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dom.Dominect.GameTurn parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dom.Dominect.GameTurn parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dom.Dominect.GameTurn parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dom.Dominect.GameTurn parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dom.Dominect.GameTurn parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dom.Dominect.GameTurn parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dom.Dominect.GameTurn parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dom.Dominect.GameTurn parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dom.Dominect.GameTurn parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dom.Dominect.GameTurn parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dom.Dominect.GameTurn prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The GameTurn packet defines the two occupied positions of the played domino piece.
     * These positions should be adjacent (a valid domino piece), otherwise the server will respond with an invalid turn status.
     * </pre>
     *
     * Protobuf type {@code dom.GameTurn}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dom.GameTurn)
        dom.Dominect.GameTurnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dom.Dominect.internal_static_dom_GameTurn_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dom.Dominect.internal_static_dom_GameTurn_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dom.Dominect.GameTurn.class, dom.Dominect.GameTurn.Builder.class);
      }

      // Construct using dom.Dominect.GameTurn.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        x1_ = 0;

        y1_ = 0;

        x2_ = 0;

        y2_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dom.Dominect.internal_static_dom_GameTurn_descriptor;
      }

      @java.lang.Override
      public dom.Dominect.GameTurn getDefaultInstanceForType() {
        return dom.Dominect.GameTurn.getDefaultInstance();
      }

      @java.lang.Override
      public dom.Dominect.GameTurn build() {
        dom.Dominect.GameTurn result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dom.Dominect.GameTurn buildPartial() {
        dom.Dominect.GameTurn result = new dom.Dominect.GameTurn(this);
        result.x1_ = x1_;
        result.y1_ = y1_;
        result.x2_ = x2_;
        result.y2_ = y2_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dom.Dominect.GameTurn) {
          return mergeFrom((dom.Dominect.GameTurn)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dom.Dominect.GameTurn other) {
        if (other == dom.Dominect.GameTurn.getDefaultInstance()) return this;
        if (other.getX1() != 0) {
          setX1(other.getX1());
        }
        if (other.getY1() != 0) {
          setY1(other.getY1());
        }
        if (other.getX2() != 0) {
          setX2(other.getX2());
        }
        if (other.getY2() != 0) {
          setY2(other.getY2());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dom.Dominect.GameTurn parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dom.Dominect.GameTurn) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int x1_ ;
      /**
       * <pre>
       * 1. Position, X-axis coordinate.
       * </pre>
       *
       * <code>uint32 x1 = 1;</code>
       * @return The x1.
       */
      @java.lang.Override
      public int getX1() {
        return x1_;
      }
      /**
       * <pre>
       * 1. Position, X-axis coordinate.
       * </pre>
       *
       * <code>uint32 x1 = 1;</code>
       * @param value The x1 to set.
       * @return This builder for chaining.
       */
      public Builder setX1(int value) {
        
        x1_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 1. Position, X-axis coordinate.
       * </pre>
       *
       * <code>uint32 x1 = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearX1() {
        
        x1_ = 0;
        onChanged();
        return this;
      }

      private int y1_ ;
      /**
       * <pre>
       * 1. Position, Y-axis coordinate.
       * </pre>
       *
       * <code>uint32 y1 = 2;</code>
       * @return The y1.
       */
      @java.lang.Override
      public int getY1() {
        return y1_;
      }
      /**
       * <pre>
       * 1. Position, Y-axis coordinate.
       * </pre>
       *
       * <code>uint32 y1 = 2;</code>
       * @param value The y1 to set.
       * @return This builder for chaining.
       */
      public Builder setY1(int value) {
        
        y1_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 1. Position, Y-axis coordinate.
       * </pre>
       *
       * <code>uint32 y1 = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearY1() {
        
        y1_ = 0;
        onChanged();
        return this;
      }

      private int x2_ ;
      /**
       * <pre>
       * 2. Position, X-axis coordinate.
       * </pre>
       *
       * <code>uint32 x2 = 3;</code>
       * @return The x2.
       */
      @java.lang.Override
      public int getX2() {
        return x2_;
      }
      /**
       * <pre>
       * 2. Position, X-axis coordinate.
       * </pre>
       *
       * <code>uint32 x2 = 3;</code>
       * @param value The x2 to set.
       * @return This builder for chaining.
       */
      public Builder setX2(int value) {
        
        x2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 2. Position, X-axis coordinate.
       * </pre>
       *
       * <code>uint32 x2 = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearX2() {
        
        x2_ = 0;
        onChanged();
        return this;
      }

      private int y2_ ;
      /**
       * <pre>
       * 2. Position, Y-axis coordinate.
       * </pre>
       *
       * <code>uint32 y2 = 4;</code>
       * @return The y2.
       */
      @java.lang.Override
      public int getY2() {
        return y2_;
      }
      /**
       * <pre>
       * 2. Position, Y-axis coordinate.
       * </pre>
       *
       * <code>uint32 y2 = 4;</code>
       * @param value The y2 to set.
       * @return This builder for chaining.
       */
      public Builder setY2(int value) {
        
        y2_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 2. Position, Y-axis coordinate.
       * </pre>
       *
       * <code>uint32 y2 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearY2() {
        
        y2_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dom.GameTurn)
    }

    // @@protoc_insertion_point(class_scope:dom.GameTurn)
    private static final dom.Dominect.GameTurn DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dom.Dominect.GameTurn();
    }

    public static dom.Dominect.GameTurn getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GameTurn>
        PARSER = new com.google.protobuf.AbstractParser<GameTurn>() {
      @java.lang.Override
      public GameTurn parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameTurn(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameTurn> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameTurn> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dom.Dominect.GameTurn getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GameStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dom.GameState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The used board width.
     * </pre>
     *
     * <code>uint32 board_width = 1;</code>
     * @return The boardWidth.
     */
    int getBoardWidth();

    /**
     * <pre>
     * The used board height.
     * </pre>
     *
     * <code>uint32 board_height = 2;</code>
     * @return The boardHeight.
     */
    int getBoardHeight();

    /**
     * <pre>
     * Byte array containing the current board information.
     * Each byte/character corresponds to a field state.
     * Ascii '0' ... Field unoccupied.
     * Ascii '1' ... Field belongs to the first player.
     * Ascii '2' ... Field belongs to the second player.
     * The overlying GameState packet defines "beginning_player", which is set to true, if you are the first player.
     * Fields are ordered row-after-row inside the byte array "board_data".
     * The first field of "board_data" corresponds to the position (x|y)-&gt;(0|0), the second to (x|y)-&gt;(1|0).
     * </pre>
     *
     * <code>bytes board_data = 3;</code>
     * @return The boardData.
     */
    com.google.protobuf.ByteString getBoardData();
  }
  /**
   * <pre>
   * The GameState packet defines the current board state of the match.
   * </pre>
   *
   * Protobuf type {@code dom.GameState}
   */
  public static final class GameState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dom.GameState)
      GameStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameState.newBuilder() to construct.
    private GameState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameState() {
      boardData_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GameState();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              boardWidth_ = input.readUInt32();
              break;
            }
            case 16: {

              boardHeight_ = input.readUInt32();
              break;
            }
            case 26: {

              boardData_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dom.Dominect.internal_static_dom_GameState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dom.Dominect.internal_static_dom_GameState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dom.Dominect.GameState.class, dom.Dominect.GameState.Builder.class);
    }

    public static final int BOARD_WIDTH_FIELD_NUMBER = 1;
    private int boardWidth_;
    /**
     * <pre>
     * The used board width.
     * </pre>
     *
     * <code>uint32 board_width = 1;</code>
     * @return The boardWidth.
     */
    @java.lang.Override
    public int getBoardWidth() {
      return boardWidth_;
    }

    public static final int BOARD_HEIGHT_FIELD_NUMBER = 2;
    private int boardHeight_;
    /**
     * <pre>
     * The used board height.
     * </pre>
     *
     * <code>uint32 board_height = 2;</code>
     * @return The boardHeight.
     */
    @java.lang.Override
    public int getBoardHeight() {
      return boardHeight_;
    }

    public static final int BOARD_DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString boardData_;
    /**
     * <pre>
     * Byte array containing the current board information.
     * Each byte/character corresponds to a field state.
     * Ascii '0' ... Field unoccupied.
     * Ascii '1' ... Field belongs to the first player.
     * Ascii '2' ... Field belongs to the second player.
     * The overlying GameState packet defines "beginning_player", which is set to true, if you are the first player.
     * Fields are ordered row-after-row inside the byte array "board_data".
     * The first field of "board_data" corresponds to the position (x|y)-&gt;(0|0), the second to (x|y)-&gt;(1|0).
     * </pre>
     *
     * <code>bytes board_data = 3;</code>
     * @return The boardData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBoardData() {
      return boardData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (boardWidth_ != 0) {
        output.writeUInt32(1, boardWidth_);
      }
      if (boardHeight_ != 0) {
        output.writeUInt32(2, boardHeight_);
      }
      if (!boardData_.isEmpty()) {
        output.writeBytes(3, boardData_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (boardWidth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, boardWidth_);
      }
      if (boardHeight_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, boardHeight_);
      }
      if (!boardData_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, boardData_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dom.Dominect.GameState)) {
        return super.equals(obj);
      }
      dom.Dominect.GameState other = (dom.Dominect.GameState) obj;

      if (getBoardWidth()
          != other.getBoardWidth()) return false;
      if (getBoardHeight()
          != other.getBoardHeight()) return false;
      if (!getBoardData()
          .equals(other.getBoardData())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BOARD_WIDTH_FIELD_NUMBER;
      hash = (53 * hash) + getBoardWidth();
      hash = (37 * hash) + BOARD_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + getBoardHeight();
      hash = (37 * hash) + BOARD_DATA_FIELD_NUMBER;
      hash = (53 * hash) + getBoardData().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dom.Dominect.GameState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dom.Dominect.GameState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dom.Dominect.GameState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dom.Dominect.GameState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dom.Dominect.GameState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dom.Dominect.GameState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dom.Dominect.GameState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dom.Dominect.GameState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static dom.Dominect.GameState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static dom.Dominect.GameState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dom.Dominect.GameState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static dom.Dominect.GameState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dom.Dominect.GameState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The GameState packet defines the current board state of the match.
     * </pre>
     *
     * Protobuf type {@code dom.GameState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dom.GameState)
        dom.Dominect.GameStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dom.Dominect.internal_static_dom_GameState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dom.Dominect.internal_static_dom_GameState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dom.Dominect.GameState.class, dom.Dominect.GameState.Builder.class);
      }

      // Construct using dom.Dominect.GameState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        boardWidth_ = 0;

        boardHeight_ = 0;

        boardData_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dom.Dominect.internal_static_dom_GameState_descriptor;
      }

      @java.lang.Override
      public dom.Dominect.GameState getDefaultInstanceForType() {
        return dom.Dominect.GameState.getDefaultInstance();
      }

      @java.lang.Override
      public dom.Dominect.GameState build() {
        dom.Dominect.GameState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dom.Dominect.GameState buildPartial() {
        dom.Dominect.GameState result = new dom.Dominect.GameState(this);
        result.boardWidth_ = boardWidth_;
        result.boardHeight_ = boardHeight_;
        result.boardData_ = boardData_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dom.Dominect.GameState) {
          return mergeFrom((dom.Dominect.GameState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dom.Dominect.GameState other) {
        if (other == dom.Dominect.GameState.getDefaultInstance()) return this;
        if (other.getBoardWidth() != 0) {
          setBoardWidth(other.getBoardWidth());
        }
        if (other.getBoardHeight() != 0) {
          setBoardHeight(other.getBoardHeight());
        }
        if (other.getBoardData() != com.google.protobuf.ByteString.EMPTY) {
          setBoardData(other.getBoardData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        dom.Dominect.GameState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (dom.Dominect.GameState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int boardWidth_ ;
      /**
       * <pre>
       * The used board width.
       * </pre>
       *
       * <code>uint32 board_width = 1;</code>
       * @return The boardWidth.
       */
      @java.lang.Override
      public int getBoardWidth() {
        return boardWidth_;
      }
      /**
       * <pre>
       * The used board width.
       * </pre>
       *
       * <code>uint32 board_width = 1;</code>
       * @param value The boardWidth to set.
       * @return This builder for chaining.
       */
      public Builder setBoardWidth(int value) {
        
        boardWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The used board width.
       * </pre>
       *
       * <code>uint32 board_width = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardWidth() {
        
        boardWidth_ = 0;
        onChanged();
        return this;
      }

      private int boardHeight_ ;
      /**
       * <pre>
       * The used board height.
       * </pre>
       *
       * <code>uint32 board_height = 2;</code>
       * @return The boardHeight.
       */
      @java.lang.Override
      public int getBoardHeight() {
        return boardHeight_;
      }
      /**
       * <pre>
       * The used board height.
       * </pre>
       *
       * <code>uint32 board_height = 2;</code>
       * @param value The boardHeight to set.
       * @return This builder for chaining.
       */
      public Builder setBoardHeight(int value) {
        
        boardHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The used board height.
       * </pre>
       *
       * <code>uint32 board_height = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardHeight() {
        
        boardHeight_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString boardData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Byte array containing the current board information.
       * Each byte/character corresponds to a field state.
       * Ascii '0' ... Field unoccupied.
       * Ascii '1' ... Field belongs to the first player.
       * Ascii '2' ... Field belongs to the second player.
       * The overlying GameState packet defines "beginning_player", which is set to true, if you are the first player.
       * Fields are ordered row-after-row inside the byte array "board_data".
       * The first field of "board_data" corresponds to the position (x|y)-&gt;(0|0), the second to (x|y)-&gt;(1|0).
       * </pre>
       *
       * <code>bytes board_data = 3;</code>
       * @return The boardData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getBoardData() {
        return boardData_;
      }
      /**
       * <pre>
       * Byte array containing the current board information.
       * Each byte/character corresponds to a field state.
       * Ascii '0' ... Field unoccupied.
       * Ascii '1' ... Field belongs to the first player.
       * Ascii '2' ... Field belongs to the second player.
       * The overlying GameState packet defines "beginning_player", which is set to true, if you are the first player.
       * Fields are ordered row-after-row inside the byte array "board_data".
       * The first field of "board_data" corresponds to the position (x|y)-&gt;(0|0), the second to (x|y)-&gt;(1|0).
       * </pre>
       *
       * <code>bytes board_data = 3;</code>
       * @param value The boardData to set.
       * @return This builder for chaining.
       */
      public Builder setBoardData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        boardData_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Byte array containing the current board information.
       * Each byte/character corresponds to a field state.
       * Ascii '0' ... Field unoccupied.
       * Ascii '1' ... Field belongs to the first player.
       * Ascii '2' ... Field belongs to the second player.
       * The overlying GameState packet defines "beginning_player", which is set to true, if you are the first player.
       * Fields are ordered row-after-row inside the byte array "board_data".
       * The first field of "board_data" corresponds to the position (x|y)-&gt;(0|0), the second to (x|y)-&gt;(1|0).
       * </pre>
       *
       * <code>bytes board_data = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoardData() {
        
        boardData_ = getDefaultInstance().getBoardData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dom.GameState)
    }

    // @@protoc_insertion_point(class_scope:dom.GameState)
    private static final dom.Dominect.GameState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dom.Dominect.GameState();
    }

    public static dom.Dominect.GameState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GameState>
        PARSER = new com.google.protobuf.AbstractParser<GameState>() {
      @java.lang.Override
      public GameState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dom.Dominect.GameState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dom_GameParameter_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dom_GameParameter_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dom_GameTurn_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dom_GameTurn_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dom_GameState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dom_GameState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016dominect.proto\022\003dom\":\n\rGameParameter\022\023" +
      "\n\013board_width\030\001 \001(\r\022\024\n\014board_height\030\002 \001(" +
      "\r\":\n\010GameTurn\022\n\n\002x1\030\001 \001(\r\022\n\n\002y1\030\002 \001(\r\022\n\n" +
      "\002x2\030\003 \001(\r\022\n\n\002y2\030\004 \001(\r\"J\n\tGameState\022\023\n\013bo" +
      "ard_width\030\001 \001(\r\022\024\n\014board_height\030\002 \001(\r\022\022\n" +
      "\nboard_data\030\003 \001(\014b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_dom_GameParameter_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dom_GameParameter_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dom_GameParameter_descriptor,
        new java.lang.String[] { "BoardWidth", "BoardHeight", });
    internal_static_dom_GameTurn_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dom_GameTurn_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dom_GameTurn_descriptor,
        new java.lang.String[] { "X1", "Y1", "X2", "Y2", });
    internal_static_dom_GameState_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_dom_GameState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dom_GameState_descriptor,
        new java.lang.String[] { "BoardWidth", "BoardHeight", "BoardData", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
